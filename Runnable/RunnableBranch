from langchain_core.prompts import PromptTemplate
from langchain_core.output_parsers import StrOutputParser
from langchain.schema.runnable import RunnableSequence, RunnableParallel, RunnablePassthrough, RunnableLambda, RunnableBranch

prompt1 = PromptTemplate(input_variables=["topic"], template="Write a report on {topic}")
prompt2 = PromptTemplate(input_variables=["text"], template="Summarize the text {text}")

parser = StrOutputParser()

report_chain = RunnableSequence(prompt1,client,parser)
summary_chain = RunnableSequence(prompt2,client,parser)

branch_chain = RunnableBranch(
                        (lambda x:len(x.split()) > 500,summary_chain),
                        RunnablePassthrough() 
                        )
# If report > 500 words, summarize it else pass through
final_chain = RunnableSequence(report_chain,branch_chain)

print(final_chain.invoke({"topic":"India"}))
