from langchain_core.prompts import PromptTemplate
from langchain_core.output_parsers import StrOutputParser
from langchain_community.document_loaders import TextLoader,WebBaseLoader 
from langchain_text_splitters import RecursiveCharacterTextSplitter
from langchain_community.vectorstores import FAISS
import bs4

#loader = TextLoader("../../Workspace/Users/gdadhich@microsoft.com/LLM/speech.txt",encoding='utf-8')
url = "https://en.wikipedia.org/wiki/India"
loader = WebBaseLoader(web_paths=(url,),
                       bs_kwargs=dict(parse_only=bs4.SoupStrainer())
                      )

parser = StrOutputParser()

docs = loader.load()

text_splitter = RecursiveCharacterTextSplitter(chunk_size=200, chunk_overlap=20)
chunks = text_splitter.split_documents(docs)

prompt = PromptTemplate(input_variables=["question","text"], 
                        template="Give answer to the question {question} based on the text {text}")

faiss_index = FAISS.from_documents(documents = chunks,
                                   embedding = embeddings)   

retriever = faiss_index.as_retriever(search_type="mmr",  # changed this from default as similarity to mmr
                                     search_kwargs={"k":2})               

result = retriever.invoke("What is the definition of international poverty line")

for i,doc in enumerate(result):
  print("Result ",i+1)
  print(doc.page_content)
